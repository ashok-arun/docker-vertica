#
# (C) 2021 GoodData Corporation
#
############################################################################################################
ARG os_version="ubuntu:18.04"

FROM ${os_version} as builder

ENV DEBIAN_FRONTEND noninteractive
ENV TERM 1
ENV VERTICA_OPT_DIR="/opt/vertica"

ARG vertica_version="10.0.1-5"
ARG vertica_package="vertica_${vertica_version}_amd64.deb"
ARG vertica_db_user="dbadmin"
ARG vertica_db_group="dbadmin"
ARG vertica_db_name="verticadb"
ARG remove_packages=""

ADD ./packages/${vertica_package} /tmp/${vertica_package}

# Install prerequisites and Vertica
RUN set -x \
 && apt-get update -y \
 && apt-get upgrade --no-install-recommends -y \
 && apt-get install --no-install-recommends -yqq openssh-client openssh-server curl ca-certificates locales sysstat dialog libexpat1 iproute2 ntp

# Fix locales
RUN set -x \
 && /bin/echo "en_US ISO-8859-1" > /etc/locale.gen \
 && /bin/echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
 && /usr/sbin/locale-gen

# Install Vertica package
RUN set -x \
 && dpkg -i /tmp/${vertica_package}

# Cleanup to optimize the size of final image
RUN set -x \
 && rm -rf ${VERTICA_OPT_DIR}/lib64

# If required, remove Vertica packages(e.g. MachineLearning), which are not needed
RUN set -x \
 && bash -c "for package in $remove_packages; do rm -rf ${VERTICA_OPT_DIR}/packages/\$package; done"

ENV SHELL "/bin/bash"

# Create DB user and group in OS. Fix their ID, so they match in the following stage
RUN /usr/sbin/groupadd -r -g 666 $vertica_db_group \
 && /usr/sbin/useradd -r -u 666 -m -s /bin/bash -g $vertica_db_group $vertica_db_user

# Run install_vertica script to prepare environment
RUN set -x \
 && ${VERTICA_OPT_DIR}/sbin/install_vertica --license CE --accept-eula --hosts 127.0.0.1 --dba-user-password-disabled \
   --failure-threshold NONE --no-system-configuration --point-to-point --ignore-aws-instance-type --ignore-install-config \
   --no-ssh-key-install --dba-user $vertica_db_user --dba-group $vertica_db_group

# Change owner to vertica DB user everywhere the user needs it
RUN set -x \
 && chown -R $vertica_db_user:$vertica_db_group \
   ${VERTICA_OPT_DIR}/config ${VERTICA_OPT_DIR}/log \
   ${VERTICA_OPT_DIR}/packages ${VERTICA_OPT_DIR}/examples

############################################################################################################
FROM ${os_version}

ARG vertica_db_user="dbadmin"
ARG vertica_db_group="dbadmin"
ARG vertica_db_name="verticadb"

ENV VERTICA_OPT_DIR="/opt/vertica"
ENV VERTICA_DB_NAME="$vertica_db_name"
ENV VERTICA_OPT_BIN="${VERTICA_OPT_DIR}/bin"
ENV VERTICA_HOME_DIR="/home/$vertica_db_user"
ENV VERTICA_VOLUME_DIR="/data"
ENV VERTICA_DATA_DIR="${VERTICA_VOLUME_DIR}/vertica"
ENV PYTHON_EGG_CACHE="/tmp/.python-eggs"
ENV ENTRYPOINT_SCRIPT="docker-entrypoint.sh"
ENV ENTRYPOINT_SCRIPT_PATH="${VERTICA_HOME_DIR}/${ENTRYPOINT_SCRIPT}"

# Create DB user in OS and create python egg cache dir under this user
RUN set -x \
 && /usr/sbin/groupadd -r -g 666 $vertica_db_group \
 && /usr/sbin/useradd -r -u 666 -m -s /bin/bash -g $vertica_db_group $vertica_db_user \
 && su - $vertica_db_user -c "mkdir $PYTHON_EGG_CACHE"

COPY --from=builder $VERTICA_OPT_DIR $VERTICA_OPT_DIR

ENV DEBIAN_FRONTEND noninteractive
ENV TERM 1

# Install prerequisites, create Vertica data dir, document fix timezone issue, set privileges, limits and generate locales
RUN set -x \
 && apt-get update -y \
 && apt-get upgrade --no-install-recommends -y \
 && apt-get install -y locales sysstat dialog libexpat1 iproute2 ntp libkeyutils1 openssl procps vim \
 && chsh -s /bin/bash root \
 && /bin/echo "en_US ISO-8859-1" > /etc/locale.gen \
 && /bin/echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
 && /usr/sbin/locale-gen \
 && echo "${vertica_db_user} -       nice    0" >> /etc/security/limits.conf \
 && echo "${vertica_db_user} -       nofile  65536" >> /etc/security/limits.conf \
 && mkdir -p ${VERTICA_DATA_DIR} && chown $vertica_db_user:$vertica_db_group ${VERTICA_DATA_DIR} \
 # TODO - Vertica does not support all time zones (known issue - VER-52479)
 # This is workaround solution, user can uncomment it, if he requires unsupported timezone
 # Link OS timezones, because some timezones are missing in Vertica
 # && rm -rf ${VERTICA_OPT_DIR}/share/timezone \
 # && ln -sT /usr/share/zoneinfo ${VERTICA_OPT_DIR}/share/timezone \
 && apt remove --purge -y libpython2.7

ADD ./env_setup/vertica_env.sh /etc/profile.d/
ADD ./${ENTRYPOINT_SCRIPT} ${ENTRYPOINT_SCRIPT_PATH}

# DB is running under vertica_db_user, not under root
USER $vertica_db_user

WORKDIR ${VERTICA_HOME_DIR}

ADD ./env_setup/.vsqlrc .vsqlrc

VOLUME ${VERTICA_VOLUME_DIR}

ENTRYPOINT $ENTRYPOINT_SCRIPT_PATH
EXPOSE 5433

LABEL image_name="vertica_db"
LABEL os_family="debian"
LABEL os_version="$os_version"
LABEL vertica_version="$vertica_version"
LABEL maintainer="vertica@gooddata.com"
LABEL git_repository_url="https://github.com/gooddata/docker-vertica"
